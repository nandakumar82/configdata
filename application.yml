#Sample greeting property 
greeting: Hello World!!!!

lucky-word: Testing ConfigServer

---
wordConfig:
  preamble: The lucky word is
  luckyWord: Accurate Background


#Eureka server Configurations

eureka:
#  instance:
#    hostname: eureka-primary
  client:

#    registerWithEureka: true
#    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8010/eureka/



---
spring:
  profiles: subject
words: I,You,He,She,It

---
spring:
  profiles: verb
words: ran,knew,had,saw,bought

---
spring:
  profiles: article
words: a,the

---
spring:
  profiles: adjective
words: reasonable,leaky,suspicious,ordinary,unlikely

---
spring:
  profiles: noun
words: boat,book,vote,seat,backpack,partition,groundhog



#
#---
## This default profile is used when running a single instance completely standalone:
#spring:
#  profiles: default
#eureka:
#  client:
#    registerWithEureka: true
#    fetchRegistry: false
#  server:
#    waitTimeInMsWhenSyncEmpty: 0
#
#
#
## primary, secondary, and tertiary illustrate running 3 intercommunicating instances.  This example has them running
## side-by-side on localhost -- which is unrealistic in production -- but does illustrate how multiple instances collaborate.
## Run by opening 3 separate command prompts:
## java -jar -Dspring.profiles.active=primary lab-4-eureka-server-solution-1.jar
## java -jar -Dspring.profiles.active=secondary lab-4-eureka-server-solution-1.jar
## java -jar -Dspring.profiles.active=tertiary lab-4-eureka-server-solution-1.jar
#
#---
#spring:
#  application:
#    name: eureka-server-clustered
#  profiles: primary
#server:
#  port: 8011
#eureka:
#  instance:
#    hostname: eureka-primary
#  client:
#    registerWithEureka: true
#    fetchRegistry: true
#    serviceUrl:
#      defaultZone: http://eureka-secondary:8012/eureka/,http://eureka-tertiary:8013/eureka/
#
#---
#spring:
#  application:
#    name: eureka-server-clustered
#  profiles: secondary
#server:
#  port: 8012
#eureka:
#  instance:
#    hostname: eureka-secondary
#  client:
#    registerWithEureka: true
#    fetchRegistry: true
#    serviceUrl:
#      defaultZone: http://eureka-tertiary:8013/eureka/,http://eureka-primary:8011/eureka/
#
#---
#spring:
#  application:
#    name: eureka-server-clustered
#  profiles: tertiary
#server:
#  port: 8013
#eureka:
#  instance:
#    hostname: eureka-tertiary
#  client:
#    registerWithEureka: true
#    fetchRegistry: true
#    serviceUrl:
#      defaultZone: http://eureka-primary:8011/eureka/,http://eureka-secondary:8012/eureka/